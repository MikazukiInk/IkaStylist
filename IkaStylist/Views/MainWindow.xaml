<Window x:Class="IkaStylist.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:IkaStylist.Views"
        xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        xmlns:vm="clr-namespace:IkaStylist.ViewModels" Background="AliceBlue"
        Title="{Binding Title}" Height="620" Width="1003" >

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- CollectionViewSourceで参照出来るようにしておいて -->
        <CollectionViewSource x:Key="GearSource" Source="{Binding GearPowerNames}" />
        <BooleanToVisibilityConverter x:Key="visibilityConverter" />
    </Window.Resources>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger MessageKey="EditCommand" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction 
                WindowType="{x:Type v:GearEdit}" Mode="Modal" />
        </l:InteractionMessageTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
    </i:Interaction.Triggers>


    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top" FontSize="11">
            <MenuItem Header="ファイル" Command="{Binding OpenFolderCommand}"/>
            <MenuItem Header="便利リンク集"  ToolTip="別サービスへ移動します">
                <MenuItem IsCheckable="True" Command="{Binding OpenLinkCommand}" CommandParameter="https://ikadb.herokuapp.com/weapons/damages" Header="IkaDB! ダメージ計算機" ToolTip="別サービスへ移動します"/>
            </MenuItem>


            <MenuItem Header="作者Twitter" Command="{Binding OpenLinkCommand}" CommandParameter="https://twitter.com/kazuki_mikan"/>
            <MenuItem Header="アップデート確認" Command="{Binding OnlineUpdateCommand}"/>
            <!--<MenuItem Header="テスト" Command="{Binding TestCommand}"/>-->
        </Menu>
        <StackPanel DockPanel.Dock="Left" VerticalAlignment="Top" Margin="3">

            <Grid DockPanel.Dock="Left" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition MinWidth="200"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="1" Text="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="16"/>
                <TextBlock Grid.Row="2" Text="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="16" />
                <TextBlock Grid.Row="3" Text="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="16" />
                <TextBlock Grid.Row="4" Text="4" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="16" />
                <TextBlock Grid.Row="5" Text="5" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="16" />
                <TextBlock Grid.Column="1" Text="ギアパワー" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="20" Margin="0"/>
                <ComboBox Grid.Column="1" Grid.Row="1" Margin="3" ItemsSource="{Binding GearPowerNames}" SelectedIndex="{Binding OptMgr.Requests[0].GearPowerID}"/>
                <ComboBox Grid.Column="1" Grid.Row="2" Margin="3" ItemsSource="{Binding GearPowerNames}" SelectedIndex="{Binding OptMgr.Requests[1].GearPowerID}"/>
                <ComboBox Grid.Column="1" Grid.Row="3" Margin="3" ItemsSource="{Binding GearPowerNames}" SelectedIndex="{Binding OptMgr.Requests[2].GearPowerID}"/>
                <ComboBox Grid.Column="1" Grid.Row="4" Margin="3" ItemsSource="{Binding GearPowerNames}" SelectedIndex="{Binding OptMgr.Requests[3].GearPowerID}"/>
                <ComboBox Grid.Column="1" Grid.Row="5" Margin="3" ItemsSource="{Binding GearPowerNames}" SelectedIndex="{Binding OptMgr.Requests[4].GearPowerID}"/>
                <TextBlock Grid.Column="2" Text="ポイント" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="18"/>
                <wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="1" Margin="3" Minimum="1" Maximum="57" Value="{Binding OptMgr.Requests[0].Point}" ToolTip="メインギアパワーは10ポイント&#xa;サブギアパワーは3ポイント"/>
                <wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="2" Margin="3" Minimum="1" Maximum="57" Value="{Binding OptMgr.Requests[1].Point}" ToolTip="メインギアパワーは10ポイント&#xa;サブギアパワーは3ポイント"/>
                <wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="3" Margin="3" Minimum="1" Maximum="57" Value="{Binding OptMgr.Requests[2].Point}" ToolTip="メインギアパワーは10ポイント&#xa;サブギアパワーは3ポイント"/>
                <wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="4" Margin="3" Minimum="1" Maximum="57" Value="{Binding OptMgr.Requests[3].Point}" ToolTip="メインギアパワーは10ポイント&#xa;サブギアパワーは3ポイント"/>
                <wpfTool:IntegerUpDown Grid.Column="2" Grid.Row="5" Margin="3" Minimum="1" Maximum="57" Value="{Binding OptMgr.Requests[4].Point}" ToolTip="メインギアパワーは10ポイント&#xa;サブギアパワーは3ポイント"/>

                <StackPanel Grid.Row="6" Grid.ColumnSpan="3" >
                    <CheckBox Content="未強化のギアを使わない" IsChecked="{Binding OptMgr.OnlyEnhanced}" Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBlock Text="誤差は" VerticalAlignment="Center" Margin="20,0,0,0"/>
                        <wpfTool:IntegerUpDown Margin="3" Minimum="0" Maximum="9" Width="40" Value="{Binding OptMgr.Tolerance}"/>
                        <TextBlock Text="ポイントまで認める" VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="7" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Margin="3" Content="さがす　！" Command="{Binding SearchCommand}" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="24" />
                    <Button Grid.Column="1" Margin="3" Content="リセット" Command="{Binding ResetCommand}" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="22" />
                </Grid>
            </Grid>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="検索結果" VerticalAlignment="Center"/>
                <TextBox Text="{Binding ResultCount}" IsReadOnly="True" HorizontalAlignment="Center"/>
                <TextBlock Text="件" VerticalAlignment="Center"/>
                <TextBlock Text="最大表示件数" VerticalAlignment="Center" Margin="20,0,0,0"/>
                <wpfTool:IntegerUpDown Margin="3" Minimum="50" Maximum="9999" Width="60" Value="{Binding OptMgr.MaxReslutSize}"/>
                <TextBlock Text="件" VerticalAlignment="Center"/>
            </StackPanel>

            <!--<StackPanel Orientation="Horizontal">
                <CheckBox Grid.Row="6" Grid.ColumnSpan="3" Content="フェスモード" IsChecked="{Binding toggleFesMode}" Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </StackPanel>-->

            <!--<Button Content="テスト" Command="{Binding TestCommand}"/>-->

            <TextBlock Text="ギアへんしゅう" Margin="6,50,6,6" FontSize="24" FontFamily="/IkaStylist;component/Resources/#イカモドキ" />
            <Button Margin="6" Content="アタマ" Command="{Binding EditCommand}" CommandParameter="Head" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="24" />
            <Button Margin="6" Content="フク" Command="{Binding EditCommand}" CommandParameter="Cloth" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="24" />
            <Button Margin="6" Content="クツ" Command="{Binding EditCommand}" CommandParameter="Shoes" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="24" />
        </StackPanel>

        <!-- Detail Panel -->
        <Grid DockPanel.Dock="Right" ShowGridLines="False" HorizontalAlignment="Right">
            <!-- 4行定義 -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!-- 1列定義 -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Margin="3" 
                       Text="しょうさい" 
                       Grid.Row="0" 
                       Grid.Column="0" 
                       FontFamily="/IkaStylist;component/Resources/#イカモドキ" 
                       FontSize="20"  
                       HorizontalAlignment="Left" />

            <Border Grid.Row="1" Background="Ivory" Grid.Column="0" BorderThickness="3" BorderBrush="SteelBlue" CornerRadius="5" Margin="0,0,3,5">
                <!-- アタマ -->
                <Grid ShowGridLines="False">
                    <!-- 3行定義 -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- 4列定義 -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="4" Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="SteelBlue" CornerRadius="0">
                        <TextBlock Margin="3" 
                                   Text="{Binding Path=SelectionMgr.HeadGearName}"
                                   HorizontalAlignment="Left" />
                    </Border>
                    <Image Grid.RowSpan="2" Grid.Row="1" Grid.Column="0"
                           Source="{Binding Path=SelectionMgr.HeadGearImg}" Stretch="Uniform" Width="50" Height="50" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    <Image Grid.ColumnSpan="3" Grid.Row="1" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.HeadMainGearImg}" Stretch="Uniform" Width="40" Height="40" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.HeadSubGear1Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="2"
                           Source="{Binding Path=SelectionMgr.HeadSubGear2Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="3"
                           Source="{Binding Path=SelectionMgr.HeadSubGear3Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Border Grid.Row="2" Background="Ivory" Grid.Column="0" BorderThickness="3" BorderBrush="SteelBlue" CornerRadius="5" Margin="0,0,3,5">
                <!-- フク -->
                <Grid ShowGridLines="False">
                    <!-- 3行定義 -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- 4列定義 -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="4" Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="SteelBlue" CornerRadius="0">
                        <TextBlock Margin="3" 
                                   Text="{Binding Path=SelectionMgr.ClothGearName}"
                                   HorizontalAlignment="Left" />
                    </Border>
                    <Image Grid.RowSpan="2" Grid.Row="1" Grid.Column="0"
                           Source="{Binding Path=SelectionMgr.ClothGearImg}" Stretch="Uniform" Width="50" Height="50" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    <Image Grid.ColumnSpan="3" Grid.Row="1" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.ClothMainGearImg}" Stretch="Uniform" Width="40" Height="40" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.ClothSubGear1Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="2"
                           Source="{Binding Path=SelectionMgr.ClothSubGear2Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="3"
                           Source="{Binding Path=SelectionMgr.ClothSubGear3Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Border Grid.Row="3" Background="Ivory" Grid.Column="0" BorderThickness="3" BorderBrush="SteelBlue" CornerRadius="5" Margin="0,0,3,3">
                <!-- クツ -->
                <Grid ShowGridLines="False">
                    <!-- 3行定義 -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- 4列定義 -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="4" Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="SteelBlue" CornerRadius="0">
                        <TextBlock Margin="3" 
                                   Text="{Binding Path=SelectionMgr.ShoesGearName}"
                                   HorizontalAlignment="Left" />
                    </Border>
                    <Image Grid.RowSpan="2" Grid.Row="1" Grid.Column="0"
                           Source="{Binding Path=SelectionMgr.ShoesGearImg}" Stretch="Uniform" Width="50" Height="50" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    <Image Grid.ColumnSpan="3" Grid.Row="1" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.ShoesMainGearImg}" Stretch="Uniform" Width="40" Height="40" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="1"
                           Source="{Binding Path=SelectionMgr.ShoesSubGear1Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="2"
                           Source="{Binding Path=SelectionMgr.ShoesSubGear2Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Image Grid.Row="2" Grid.Column="3"
                           Source="{Binding Path=SelectionMgr.ShoesSubGear3Img}" Stretch="Uniform" Width="30" Height="30" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
        </Grid>

        <Grid Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="けんさくけっか" Margin="30,0,0,0" FontFamily="/IkaStylist;component/Resources/#イカモドキ" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <!--結果表示用データグリッド-->
            <DataGrid Grid.Row="1"  Margin="3" Name="dataGrid1" AutoGenerateColumns="False" IsReadOnly="True" ToolTip="ギアパワーのアイコンを&#xa;　クリックでポイント順に並べ替え&#xa;　ドラッグで表示列を並べ替え"
                      ItemsSource="{Binding ResultView}" SelectedItem="{Binding SelectedCoordinate}" MinWidth="250" Width="Auto">
                <DataGrid.Resources>
                    <v:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=HeadGear.Name}" 
                    CanUserReorder="True" CanUserResize="True" FontSize="10"
                    CanUserSort="True" Header="アタマ" />
                    <DataGridTextColumn Binding="{Binding Path=ClothGear.Name}"
                    CanUserReorder="True" CanUserResize="True" FontSize="10"
                    CanUserSort="True" Header="フク"  />
                    <DataGridTextColumn Binding="{Binding Path=ShoesGear.Name}" 
                    CanUserReorder="True" CanUserResize="True" FontSize="10"
                    CanUserSort="True" Header="クツ" />
                    <!--攻撃力アップ-->
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[1]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[1],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[1]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[1]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconDamageUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[2]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[2],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[2]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[2]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconDefenseUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[3]}"  CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[3],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[3]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[3]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconInkSaverMain}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[4]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[4],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[4]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[4]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconInkSaverSub}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[5]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[5],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[5]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[5]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconInkRecoveryUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[6]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[6],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[6]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[6]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconRunSpeedUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[7]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[7],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[7]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[7]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconSwimSpeedUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[8]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[8],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[8]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[8]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconSpecialChargeUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[9]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[9],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[9]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[9]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconSpecialDurationUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[10]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[10],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[10]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[10]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconQuickRespawn}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[11]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[11],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[11]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[11]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconSpecialSaver}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[12]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[12],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[12]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[12]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconQuickSuperJump}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[13]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[13],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[13]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[13]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconBombRangeUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[14]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[14],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[14]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[14]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconOpeningGambit}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[15]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[15],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[15]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[15]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconLastDitchEffort}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[16]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[16],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[16]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[16]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconTenacity}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[17]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[17],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[17]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[17]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconComeback}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[18]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[18],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[18]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[18]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconColdBlooded}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[19]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[19],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[19]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[19]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconNinjaSquid}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[20]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[20],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[20]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[20]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconHaunt}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[21]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[21],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[21]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[21]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconRecon}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[22]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[22],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[22]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[22]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconBombSniffer}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[23]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[23],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[23]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[23]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconInkResistanceUp}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=TotalPoint[24]}" CanUserResize ="False"
                    Visibility="{Binding Data.ColumnVisibilitys[24],Converter={StaticResource visibilityConverter}, Source={StaticResource proxy}}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalPoint[24]}" Value="0" >
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsTolerance[24]}" Value="true" >
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.Header>
                            <Image Source="{StaticResource IconStealthJump}" Width="30"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                </DataGrid.Columns>

            </DataGrid>

        </Grid>
    </DockPanel>

    <!--<StackPanel>
        <DataGrid ItemsSource="{Binding GearData}" AutoGenerateColumns="True"  />
        <DataGrid.Columns>
                <DataGridTextColumn Header="Name"/>
                <DataGridComboBoxColumn Header="Sub1" SelectedValuePath="Id" DisplayMemberPath="Name" SelectedValueBinding="{Binding SelectedValue}" ItemsSource="{Binding Source={StaticResource GearSource}}" />
                <DataGridComboBoxColumn Header="Sub1" SelectedValuePath="Id" DisplayMemberPath="Name" SelectedValueBinding="{Binding SelectedValue}" ItemsSource="{Binding Source={StaticResource GearSource}}" />
                <DataGridComboBoxColumn Header="Sub2" SelectedValuePath="Id" DisplayMemberPath="Name" SelectedValueBinding="{Binding SelectedValue}" ItemsSource="{Binding Source={StaticResource GearSource}}" />
                <DataGridComboBoxColumn Header="Sub3" SelectedValuePath="Id" DisplayMemberPath="Name" SelectedValueBinding="{Binding SelectedValue}" ItemsSource="{Binding Source={StaticResource GearSource}}" />
            </DataGrid.Columns>
        <Button Content="テスト" Command="{Binding SaveCommand}"/>
    
    </StackPanel>-->

</Window>
